rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ユーザー認証チェック関数
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // 管理者チェック関数
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // ユーザー本人チェック関数
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // users コレクション
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin();
    }
    
    // courses コレクション
    match /courses/{courseId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
      
      // course_holes サブコレクション
      match /holes/{holeId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
      }
    }
    
    // rounds コレクション
    match /rounds/{roundId} {
      allow read, write: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.userId;
      allow read: if isAdmin();
    }
    
    // stats コレクション
    match /stats/{userId} {
      allow read: if isOwner(userId);
      allow write: if false; // Cloud Functionからのみ
    }
  }
}